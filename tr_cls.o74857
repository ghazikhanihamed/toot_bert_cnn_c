Dataset name:  ionchannels_membraneproteins
Dataset type:  balanced
Dataset split:  test
Model name:  ProtB
Traceback (most recent call last):
  File "train_classifiers.py", line 250, in <module>
    grid_search.fit(train_dataset, y_train)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/sklearn/model_selection/_search.py", line 891, in fit
    self._run_search(evaluate_candidates)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/sklearn/model_selection/_search.py", line 1392, in _run_search
    evaluate_candidates(ParameterGrid(self.param_grid))
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/sklearn/model_selection/_search.py", line 851, in evaluate_candidates
    enumerate(candidate_params), enumerate(cv.split(X, y, groups))
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/joblib/parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/sklearn/utils/fixes.py", line 216, in __call__
    return self.function(*args, **kwargs)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/sklearn/model_selection/_validation.py", line 680, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/classifier.py", line 141, in fit
    return super(NeuralNetClassifier, self).fit(X, y, **fit_params)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/net.py", line 1230, in fit
    self.partial_fit(X, y, **fit_params)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/net.py", line 1187, in partial_fit
    self.notify('on_train_begin', X=X, y=y)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/net.py", line 356, in notify
    getattr(cb, method_name)(self, **cb_kwargs)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/callbacks/scoring.py", line 160, in on_train_begin
    self.X_indexing_ = check_indexing(X)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 290, in check_indexing
    multi_indexing(data[0], 0)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 372, in multi_indexing
    return check_indexing(data)(data, i)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 250, in _indexing_list_tuple_of_data
    for x, indexing in zip(data, indexings)]
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 250, in <listcomp>
    for x, indexing in zip(data, indexings)]
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 369, in multi_indexing
    return indexing(data, i)
  File "/home/h_ghazik/python_path_gpu/lib/python3.7/site-packages/skorch/utils.py", line 264, in _indexing_other
    return data[i]
IndexError: invalid index of a 0-dim tensor. Use `tensor.item()` in Python or `tensor.item<T>()` in C++ to convert a 0-dim tensor to a number
